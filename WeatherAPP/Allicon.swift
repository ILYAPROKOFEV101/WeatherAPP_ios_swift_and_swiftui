//
//  Allicon.swift
//  WeatherAPP
//
//  Created by Ilya Prokofev on 15.07.2024.
//

import SwiftUI

func weatherIcon(for condition: String) -> some View {
      let iconName: String
      switch condition.lowercased() {
      case "clear":
          iconName = "sun.max.fill" // –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ "sunny"
      case "clouds":
          iconName = "cloud.fill" // –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ "cloud"
      case "rain":
          iconName = "cloud.rain.fill"
      case "snow":
          iconName = "snow"
      case "thunderstorm":
          iconName = "cloud.bolt.fill"
      default:
          iconName = "questionmark.circle"
      }
      return Image(systemName: iconName)
          .resizable()
          .frame(width: 24, height: 24)
  }

func weatherFeelsLikeIcon(for temperature: Double) -> some View {
   let emoji: String

   switch temperature {
   case 50...:
       emoji = "ü•µ" // –û—á–µ–Ω—å –∂–∞—Ä–∫–æ
   case 40..<50:
       emoji = "üî•" // –ñ–∞—Ä–∫–æ
   case 30..<40:
       emoji = "üåû" // –°–æ–ª–Ω–µ—á–Ω–æ
   case 25..<30:
       emoji = "üòé" // –¢–µ–ø–ª–æ
   case 20..<25:
       emoji = "üòä" // –ö–æ–º—Ñ–æ—Ä—Ç–Ω–æ
   case 10..<20:
       emoji = "üôÇ" // –ü—Ä–æ—Ö–ª–∞–¥–Ω–æ
   case 0..<10:
       emoji = "ü•∂" // –•–æ–ª–æ–¥–Ω–æ
   case -10..<0:
       emoji = "‚ùÑÔ∏è" // –ú–æ—Ä–æ–∑–Ω–æ
   case -20 ..< -10:
       emoji = "‚õÑÔ∏è" // –°–Ω–µ–≥–æ–≤–∏–∫
   case -30 ..< -20:
       emoji = "üßä" // –û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ
   default:
       emoji = "‚ùì" // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
   }

   return Text(emoji)
       .font(.system(size: 24))
}


func humidityIcon(for humidity: Int) -> some View {
    let emoji: String

    switch humidity {
    case 90...:
        emoji = "üí¶" // –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å (–∫–∞–ø–ª–∏)
    case 70..<90:
        emoji = "üíß" // –í—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å (–∫–∞–ø–ª—è)
    case 50..<70:
        emoji = "üòê" // –£–º–µ—Ä–µ–Ω–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å (–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –ª–∏—Ü–æ)
    case 30..<50:
        emoji = "üôÇ" // –ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å (—É–ª—ã–±–∫–∞)
    case ..<30:
        emoji = "üåµ" // –ù–∏–∑–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å (–∫–∞–∫—Ç—É—Å)
    default:
        emoji = "‚ùì" // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å
    }

    return Text(emoji)
        .font(.system(size: 24))
}


func Grnd_levelIcon(for pressure: Int) -> some View {
   let emoji: String

   switch pressure {
   case 1050...:
       emoji = "‚ö†Ô∏è" // –û—á–µ–Ω—å –≤—ã—Å–æ–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ)
   case 1020..<1050:
       emoji = "‚¨ÜÔ∏è" // –í—ã—Å–æ–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ (—Å—Ç—Ä–µ–ª–∫–∞ –≤–≤–µ—Ä—Ö)
   case 1000..<1020:
       emoji = "üÜó" // –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ (–≥–∞–ª–æ—á–∫–∞)
   case 980..<1000:
       emoji = "‚¨áÔ∏è" // –ü–æ–Ω–∏–∂–µ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ (—Å—Ç—Ä–µ–ª–∫–∞ –≤–Ω–∏–∑)
   case ..<980:
       emoji = "üîª" // –ù–∏–∑–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ (—Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –≤–Ω–∏–∑)
   default:
       emoji = "‚ùì" // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ
   }

   return Text(emoji)
       .font(.system(size: 24))
}




func weatherInfo(for condition: String) -> (String, String) {
   switch condition.lowercased() {
   case "clear":
       return ("–Ø—Å–Ω–æ", "sun.max.fill")
   case "clouds":
       return ("–û–±–ª–∞—á–Ω–æ", "cloud.fill")
   case "rain":
       return ("–î–æ–∂–¥—å", "cloud.rain.fill")
   case "snow":
       return ("–°–Ω–µ–≥", "snow")
   case "thunderstorm":
       return ("–ì—Ä–æ–∑–∞", "cloud.bolt.fill")
   default:
       return ("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", "questionmark.circle")
   }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
   func cardColor(for index: Int) -> Color {
       let colors: [Color] = [  Color(red: 100/255, green: 196/255, blue: 102/255), Color(red: 246/255, green: 206/255, blue: 70/255), Color(red: 255/255, green: 255/255, blue: 255/255), ] // –¶–≤–µ—Ç–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
       return colors[index % colors.count]
   }
